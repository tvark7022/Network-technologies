Клиент:
Переводим ip адрес сервера из строк в объект serverAddress
Получаем текущее время на нашем компьютере
Потом пишем его в консоль
Создаём сокет, через который будем отсылать данные (наше время) на сервер
Создаём объект, содержащий Ip сервера и порта (нужно для работы сокета, а именно отправки)
Получаем представление времени в виде бинарного кода - time.ToBinary()
Методом BitConverter.GetBytes переводим в массив байт, т.к. для отправки всё представляется как последовательность байт
socket.SendTo(bytes, serverEndPoint): берём наш массив, берём сформированный раннее объект с ip и портом сервера и отправляем байты туда
через созданный раннее сокет
Ждём ответа от сервера
закрываем соединение
Печатаем разницу во времени
BitConverter.ToInt32(buffer, 0) функция переводит байты обратно
Console.ReadKey(); - ждём пока пользователь нажмёт любую клавишу, чтобы консол не закрывалась
Сервер:
Cоздаёт udp сокет
Создаёт переменную для хранения ip клиента. Передаётся по ссылке в socket.Receive
И внутри функции изменяется. После её выполнения в этой переменной будут лежать адрес и порт клиента
Печатаем в консоль время в формате "dd.MM.yyyy HH:mm:ss"
Далее узнаём текущее время на сервере
Печатаем его
Находим разность со временем на клиенте
Переводим миллисекунды в массив байт
И отсылаем обратно на клиент
